import React, { useState } from "react";
import {
  View,
  StyleSheet,
  Image,
  TouchableOpacity,
  Text,
  ToastAndroid,
} from "react-native";
import { Button, TextInput } from "react-native-paper";
import Logo from "../../../assets/pics/logo2.png";
import fetchServices from "../services/fetchServices";

export default function LoginForms({ navigation }) {
  const [showPass, setShowPass] = useState(false);
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [errors, setErrors] = React.useState({});
  const [loading, setLoading] = React.useState(false);

  const showToast = (message = "Something went wrong") => {
    ToastAndroid.show(message, 3000);
  };

  const handleLogin = async () => {
    try {
      setLoading(true);

      if (email === "") {
        setErrors((prevErrors) => ({ ...prevErrors, email: true }));
        showToast("Please enter your email");
        return;
      }

      if (password === "") {
        setErrors((prevErrors) => ({ ...prevErrors, password: true }));
        showToast("Please enter your password");
        return;
      }

      const url = "http://192.168.254.108:8000/api/v1/login";
      const data = {
        email,
        password,
      };

      const result = await fetchServices.postData(url, data);

      if (result?.token) {
        navigation.navigate("HomePage");
      } else {
        showToast("Something went wrong");
      }
    } catch (e) {
      console.debug("Login Error:", e.toString());
      showToast("An error occurred during login");
    } finally {
      setLoading(false);
    }
  };

  return (
    <View style={styles.loginContainer}>
      <View style={styles.logoContainer}>
        <Image source={Logo} style={styles.logo} resizeMode="contain" />
      </View>

      <View style={styles.inputContainer}>
        <TextInput
          mode="outlined"
          placeholder="Email"
          style={{ marginBottom: 30 }}
          value={email}
          onChangeText={setEmail}
          error={errors?.email}
        />

        <TextInput
          mode="outlined"
          placeholder="Password"
          secureTextEntry={!showPass}
          value={password}
          onChangeText={setPassword}
          error={!!errors?.password} // Convert to boolean
          right={
            <TextInput.Icon
              icon={!showPass ? "eye" : "eye-off"}
              onPress={() => setShowPass(!showPass)}
            />
          }
        />
      </View>

      <View>
        <Button
          loading={loading}
          disabled={loading}
          onPress={handleLogin}
          icon="login"
          mode="contained"
          style={styles.btn}
        >
          Login
        </Button>

        <Button
          disabled={loading}
          onPress={() => navigation.navigate("RegistrationScreen")}
          icon="account-plus"
          mode="contained"
          style={{ ...styles.btn, backgroundColor: "#223cfd" }}
        >
          Sign Up
        </Button>
      </View>

      <View>
        <TouchableOpacity onPress={() => navigation.navigate("Restore")}>
          <Text
            style={{
              ...styles.message,
              color: "white",
              fontWeight: "bold",
              marginTop: 20,
            }}
          >
            Forgot Password?
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}
const styles = StyleSheet.create({
  loginContainer: {
    flexDirection: "column",
  },
  logoContainer: {
    width: "100%",
    alignItems: "center",
  },

  logo: {
    width: "50%",
    height: 200,
  },
  inputContainer: {
    marginTop: 40,
    marginBottom: "10%",
  },

  btn: {
    padding: 10,
    marginTop: 15,
  },
});
