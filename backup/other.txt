import React, { useState } from "react";
import {
  View,
  StyleSheet,
  Image,
  TouchableOpacity,
  Text,
  ToastAndroid,
} from "react-native";

import { Button, TextInput, HelperText } from "react-native-paper";
import Logo from "../../../assets/pics/logo2.png";

import fetchServices from "../services/fetchServices";
import { Formik } from "formik";
import * as Yup from "yup";

export default function LoginForms({ navigation }) {
  const [showPass, setShowPass] = useState(false);

  const showToast = (message = "Something went wrong") => {
    ToastAndroid.show(message, 3000);
  };

  const handleLogin = async (values) => {
    try {
      const url = "http://172.20.8.250/api/v1/login";
      const result = await fetchServices.postData(url, values);

      if (result.message != null) {
        showToast(result?.message);
      } else {
        navigation.navigate("Home");
      }
    } catch (e) {
      console.debug(e.toString());
    }
  };

  const validationSchema = Yup.object().shape({
    email: Yup.string()
      .email("Invalid Email")
      .required("Please enter your email"),
    password: Yup.string().required("Please enter your password"),
  });

  return (
    <Formik
      initialValues={{ email: "", password: "" }}
      onSubmit={async (values) => {
        await handleLogin(values);
      }}
      validationSchema={validationSchema}
    >
      {({
        values,
        handleChange,
        handleBlur,
        handleSubmit,
        isSubmitting,
        errors,
        touched,
        setTouched,
      }) => (
        <View style={styles.loginContainer}>
          <View style={styles.logoContainer}>
            <Image source={Logo} style={styles.logo} resizeMode="contain" />
          </View>

          <View style={styles.inputContainer}>
            <TextInput
              mode="outlined"
              left={<TextInput.Icon icon="email" />}
              placeholder="Email"
              value={values.email}
              onChangeText={handleChange("email")}
              keyboardType="email-address"
              defaultValue={values.email}
              error={errors.email && touched.email}
              onFocus={() => setTouched({ email: true }, false)}
            />
            {errors.email && touched.email && (
              <HelperText type="error" visible={errors.email}>
                {errors.email}
              </HelperText>
            )}

            <TextInput
              mode="outlined"
              placeholder="Password"
              secureTextEntry={!showPass}
              value={values.password}
              style={{ marginTop: 30 }}
              onChangeText={handleChange("password")}
              onBlur={handleBlur("password")}
              error={errors.password && touched.password}
              onFocus={() => setTouched({ password: true }, false)}
              left={<TextInput.Icon icon="lock" />}
              right={
                <TextInput.Icon
                  icon={showPass ? "eye" : "eye-off"}
                  onPress={() => setShowPass(!showPass)}
                />
              }
            />
            {errors.password && touched.password && (
              <HelperText type="error" visible={errors.password}>
                {errors.password}
              </HelperText>
            )}
          </View>

          <View>
            <Button
              loading={isSubmitting}
              disabled={isSubmitting}
              onPress={handleLogin}
              icon="login"
              mode="contained"
              style={styles.btn}
            >
              Login
            </Button>

            <Button
              disabled={isSubmitting}
              onPress={() => navigation.navigate("RegistrationScreen")}
              icon="account-plus"
              mode="contained"
              style={{ ...styles.btn, backgroundColor: "#223cfd" }}
            >
              Sign Up
            </Button>
          </View>

          <View>
            <TouchableOpacity onPress={() => navigation.navigate("Restore")}>
              <Text
                style={{
                  ...styles.message,
                  color: "white",
                  fontWeight: "bold",
                  marginTop: 20,
                }}
              >
                Forgot Password?
              </Text>
            </TouchableOpacity>
          </View>
        </View>
      )}
    </Formik>
  );
}
const styles = StyleSheet.create({
  loginContainer: {
    flexDirection: "column",
  },
  logoContainer: {
    width: "100%",
    alignItems: "center",
  },

  logo: {
    width: "50%",
    height: 200,
  },
  inputContainer: {
    marginTop: 40,
    marginBottom: "10%",
  },

  btn: {
    padding: 10,
    marginTop: 15,
  },
});
